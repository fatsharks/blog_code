#include <iostream>
#include <thread>
#include <mutex>
#include <condition_variable>

/*死锁的四个必要条件

1.存在互斥关系，资源竞争 data race
2.请求临界资源时，继续持有以及获取的资源
3.获取的资源没有使用前不会放弃
4.存在循环等待临界资源的情况

*/


/* 破坏死锁的方法

1.尽量避免出现互斥关系（不太现实，是死锁出现的原因）
2.一次性获取到所需的所有资源;
  先获取运行的基本资源，逐步使用逐步放弃，增加资源的利用率
3.进程获取不到所需的必要资源时，主动将所需的资源全部放弃，重新申请
  操作系统抢占另一个进程，强行放弃所需资源
4.对资源进行序号编码，进程按照顺序进行资源申请

*/

/* 死锁恢复

1.强制抢占
2.回滚
3.杀死进程

*/

int dead_lock_test()
{
    return 0;
}

